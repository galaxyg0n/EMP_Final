# --- Code Composer Studio (CCS) Git Ignore ---
# Version: 1.1 (Tailored for easy project import)
# Last Updated: 2025-04-20

# --- General ---
# Ignore OS-generated files
.DS_Store
Thumbs.db
ehthumbs.db

# Ignore editor backup files
*~
*.bak
*.swp
*.swo

# Ignore other version control systems
.svn/

# --- CCS Workspace Metadata ---
# IMPORTANT: This assumes your Git repository root IS your project folder,
# NOT the entire CCS workspace folder. Do NOT commit the .metadata folder
# from your workspace. If your repo is the workspace, add ".metadata/" here,
# but this is generally NOT recommended practice.
# .metadata/

# --- CCS Build Artifacts ---
# Ignore default build configuration output directories
Debug/
Release/
# Add any other custom build configuration names here if needed
# Example: MyCustomConfig/

# Ignore build output files (regardless of location, covers sub-modules if any)
*.out
*.map
*.obj
*.o
*.d   # Dependency files
*.lst # Assembly listing files
*.opt # Optimization plan files
*.pp  # Preprocessor output
*.rl  # Relocation listing
*.sym # Symbol files
*.abs # Absolute lister files
*.tmp # Temporary files
*.temp
*.lib # Generated libraries
*.a   # Generated archives/libraries

# Ignore RTSC/XDCtools generated files (Common in TI-RTOS/SYSBIOS projects)
configPkg/
*.xdc.log
*.mak # Generated makefiles from XDCtools
*.bld # Generated build scripts
*.cfg.h # Generated config header
*.cfg.c # Generated config source

# --- CCS Project/Configuration Files ---
# .project and .cproject ARE USUALLY NEEDED for import, so DO NOT ignore them.
# They define project settings, build configurations, linked resources etc.

# Ignore user-specific settings and preferences
*.userprefs
*.localenv

# Ignore CCS Launch Configurations (often contain user-specific paths/setups)
*.launch

# Ignore Target Configuration Files (.ccxml)
# These define the JTAG debugger and target device. They often contain
# hardware-specific serial numbers or settings unique to a user's setup.
# It's generally better for each collaborator to create their own .ccxml
# based on their hardware probe and target board.
# Consider adding a generic template (e.g., MyBoard_Template.ccxml) to the repo
# and instructing users to copy and use it, but ignore the active one.
#*.ccxml

# Ignore .settings folder contents? - CAREFUL!
# The .settings/ folder contains project settings managed by Eclipse/CCS.
# Some files inside (.language.settings.xml, core.prefs) are often essential
# for defining include paths, symbols, etc., especially if derived from build variables.
# Ignoring the whole folder can break import or build configuration.
# It's SAFER to NOT ignore this folder by default. If you encounter issues with
# user-specific paths within these files, investigate specific files inside
# .settings/ rather than ignoring the whole directory.
.settings/

# --- Documentation Generator Output ---
# Example for Doxygen (adjust if you use different tools/output paths)
# Doxygen/html/
# Doxygen/latex/

# --- Other ---
# Add any other specific files or directories generated by your tools or build process